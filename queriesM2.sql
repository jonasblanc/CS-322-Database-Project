--QUERY1--
SELECT EXTRACT(YEAR from C.COLLISION_DATE) as YEAR, COUNT(*) as NUMBER_COLLISIONS from COLLISIONS C
group by EXTRACT(YEAR from C.COLLISION_DATE);

--QUERY2--
--REMARK: FETCH FIRST ROWS ONLY is the equivalent to LIMIT in MySQL
SELECT P.VEHICLE_MAKE, COUNT(*) as NUMBER_VEHICLE from PARTIES P
group by P.VEHICLE_MAKE
order by COUNT(*) DESC
FETCH FIRST 1 ROW ONLY;

--QUERY3--
SELECT COUNT(*)/(SELECT COUNT(*) from CONDITION) as FRACTION_DARK from CONDITION COND
WHERE COND.LIGHTING_ID IN
(SELECT L.ID from LIGHTING L
where LOWER(L.DEFINITION) LIKE '%dark%');

--QUERY4--
SELECT COUNT(*) as NUMBER_COLLISIONS_SNOWY_WEATHER from CONDITION_WITH_WEATHER CWW
where CWW.WHEATHER_ID in
(SELECT W.ID from WEATHER W
where LOWER(W.DEFINITION) LIKE '%snow%');

--QUERY5--
-- QUESTION: Many post on stackoverflow say to use DATENAME func or DATE_FORMAT but
-- it doesn't seem available here. What to do?
-- Other solution that doesn't seems to exist: DatePart(C.COLLISION_DATE, DP_WEEKDAY)
SELECT TO_CHAR(C.COLLISION_DATE, 'DAY') as WEEKDAY, COUNT(*) AS NUMBER_COLLISIONS from COLLISIONS C
group by TO_CHAR(C.COLLISION_DATE, 'DAY'); --This should extract the day

--QUERY6--
SELECT W.DEFINITION, COUNT(*) as NUMBER_COLLISIONS from WEATHER W, CONDITION_WITH_WEATHER CWW
WHERE W.ID=CWW.WHEATHER_ID
group by W.DEFINITION --OR GROUPBY CWW.WHEATHER_ID MAYBE, SHOULD BE THE SAME
ORDER BY COUNT(*) DESC;

--QUERY7--
SELECT COUNT(*) as NUMBER_AT_FAULT_WITH_FIN_REP_LOOSE_MAT from PARTIES P
WHERE P.AT_FAULT='T'
and P.FINANCIAL_RESPONSIBILITY_ID in
(SELECT FR.ID from FINANCIAL_RESPONSIBILITY FR
where LOWER(FR.DEFINITION) LIKE '%yes%')
and P.COLLISION_CASE_ID in
(SELECT COL.CASE_ID from COLLISIONS COL
where COL.CONDITION_ID in
(Select COND.ID from CONDITION Cond
WHERE COND.ID in
(Select CWRC.CONDITION_ID from CONDITION_WITH_ROAD_CONDITION CWRC
where CWRC.ROAD_CONDITION_ID in
(SELECT RC.ID from ROAD_CONDITION RC
where LOWER(RC.DEFINITION) LIKE '%loose material%'))));

--QUERY8--
--INDIVIDUAL, would it make sense to group them? How?
SELECT MEDIAN(V.VICTIM_AGE) as MEDIAN from VICTIMS V;

SELECT VSP.DEFINITION from VICTIM_SEATING_POSITION VSP
where VSP.ID in
(SELECT V.VICTIM_SEATING_POSITION_ID from VICTIMS V
GROUP BY V.VICTIM_SEATING_POSITION_ID
order by COUNT(*) DESC
FETCH FIRST 1 ROW ONLY);

--QUERY9--
SELECT COUNT(*)/(SELECT COUNT(*) from VICTIMS V1) as FRACTION_WITH_BELT from VICTIMS V2
WHERE V2.ID in
(SELECT VEWSE.VICTIM_ID from VICTIM_EQUIPED_WITH_SAFETY_EQUIPMENT VEWSE
where VEWSE.SAFETY_EQUIPMENT_ID in
(SELECT SE.ID from SAFETY_EQUIPMENT SE
WHERE LOWER(SE.DEFINITION) LIKE '%belt use%'));

--QUERY 10--
SELECT EXTRACT(HOUR from C.COLLISION_DATE) as HOUR, COUNT(*)/(SELECT COUNT(*) from COLLISIONS) as FRACTION_COLLISIONS from COLLISIONS C
group by EXTRACT(HOUR from C.COLLISION_DATE);
